;; (defconstant +jabs-plugin-namespace+ '(:plugin :jabs))
;; (defvar *jabs-plugin-registry* (make-hash-table))
;; (defvar *jabs-plugin-type-registry* (make-hash-table))
;; (defvar *jabs-plugin-directories*
;; (defvar *pre-define-plugin-hook* nil)
;; (defvar *define-plugin-hook* nil)
;; (defvar *pre-load-plugin-hook* nil)
;; (defvar *load-plugin-hook* nil)
;; (defvar *jabs-shared-plugin-names* nil
;; (defvar *jabs-cli-plugin-names* nil)
;; (defun find-plugin-type (name)
;; (defun register-plugin-type (name &optional (validator t))
;; (defun make-plugin-package-name (name &optional (type :generic))
;; (defun find-plugin (name &optional (type :generic))
;; (defun find-plugin-file (name &key (type :generic) (filename "build") (filetype "jab"))
;; (defmethod register-plugin ((plugin plugin))
;; (defmethod share-plugin ((plugin plugin))
;; (defmethod initialize-instance :after ((plugin plugin) &key)
;; (defmethod plugin-registered-p ((plugin plugin))
;; (defun load-plugin-file (name &key (type :generic) (filename "build") (filetype "jab"))
;; (defun insert-plugin-dir (path)
;; (defun add-plugin-dir (path)
;; (defun load-plugin (name &optional (type :generic))
;; (defmethod filter-project-plugins-by-type ((project project) type)
